[
  {
    "objectID": "2023_Draft_Kirby_Death Star_Fully_Operational.html#how-many-will-have-to-get-drafted-this-year-for-kirby-to-have-the-most-drafted-in-their-first-7-seasons-as-a-coach",
    "href": "2023_Draft_Kirby_Death Star_Fully_Operational.html#how-many-will-have-to-get-drafted-this-year-for-kirby-to-have-the-most-drafted-in-their-first-7-seasons-as-a-coach",
    "title": "",
    "section": "How many will have to get drafted this year for Kirby to have the most drafted in their first 7 seasons as a coach?",
    "text": "How many will have to get drafted this year for Kirby to have the most drafted in their first 7 seasons as a coach?"
  },
  {
    "objectID": "2023_Draft_Kirby_Death Star_Fully_Operational.html#all-time-includes-the-future-and-while-saban-might-be-the-greatest-in-history-when-its-all-said-and-done-kirby-will-be-the-g.o.a.t.",
    "href": "2023_Draft_Kirby_Death Star_Fully_Operational.html#all-time-includes-the-future-and-while-saban-might-be-the-greatest-in-history-when-its-all-said-and-done-kirby-will-be-the-g.o.a.t.",
    "title": "",
    "section": "“All Time” includes the future, and while Saban might be the greatest in history, when it’s all said and done, Kirby will be the G.O.A.T.",
    "text": "“All Time” includes the future, and while Saban might be the greatest in history, when it’s all said and done, Kirby will be the G.O.A.T."
  },
  {
    "objectID": "2023_Draft_Kirby_Death Star_Fully_Operational.html",
    "href": "2023_Draft_Kirby_Death Star_Fully_Operational.html",
    "title": "",
    "section": "",
    "text": "Nick Saban won’t be the G.O.A.T.\n\n\nAn NFL Draft Perspective\n\n\nBy: Ben Leathers\n\n\n2023-04-17\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nClickbait headline aside, Nick Saban is unquestionably the greatest coach in history. However, the interesting thing about “all time” is that it includes the future. Kirby Smart is only 7 seasons into his career as a head coach, and he’s been quite prolific when it comes to putting players into the draft. How has his career start compared to other coaches beginning their careers, including Nick Saban?\n\n\n\n\n\n\n\n\nHow well has UGA put players into the draft while Kirby Smart has been the head coach?\n\n\n\n\n\n\n\n\n\n\n\n\nWow… could that “up and to the right” trajectory suggest that Kirby’s good at player development?\n\n\nYou might be thinking to yourself… “No, it just suggests he’s recruiting better players” which is a reasonable thing to think. Mark Richt is no question a DGD, and he elevated the program during his tenure. That being said, Kirby inherited a roster whose previous 3 recruiting classes had an average ranking of ~9th in the country, whereas Kirby has averaged rankings of ~3 as head coach of UGA. So you would be justified to argue that this upward trajectory just points to better recruiting. But is there more to the story?\n\n\n\nIt’s not just better players. Even the 3 stars are more likely to get drafted the longer they play under Kirby.\n\n\nHow do UGA’s Draft results during Kirby’s first 6 years compare to other coach’s first 6 years?\n\n\n\nSeeing Jimbo Fisher at #5 was surprising to begin with, but then I remembered he’s got a reputation for recruiting and he’s developing a reputation for losing recruits now that the transfer portal is a factor. Mark Richt at #6 is less surprising, he was a great coach who did put a lot of talent into the NFL.\n\n\nSo how did Larry Coker and Jim Tressel out perform Kirby in the first 6 years?\n\n\n\nOh, they stepped into programs with loaded rosters that put 8 and 11 players into the NFL in year 1. Kirby didn’t inherit a completely bare roster, but it was certainly more modest.\n\n\nHow many UGA players will need to be drafted in order for Kirby to jump into first in year 7?\n\n\n\nWhat Happened to Larry Coker?\n\n\nHe got fired from Miami after going 6-6 and didn’t coach again until 2012 when he was hired by UTSA.\n\n\nLet’s check on some coaches that are noticibly absent from the top ten.\n\n\n\nIn fairness to Saban he didn’t start his heach coaching careers at a blue blood football school, so lets compare the results from each school tenure.\n\n\n\n\nTakeaways:\n\n\nKirby’s program develops players.\n\n\nKirby’s Death Star might not have even been fully operational yet… 🤯\n\n\n“All Time” includes the future, and while Saban might be the greatest in history, Kirby is on the path to take over and when it’s all said and done…\n\n\nSaban will not be the G.O.A.T., Kirby will.\n\n\nThis analysis was based on an open source dataset, cfbd, and while I’m confident in my work, I am also confident I’m human, so if you find a mistake, please let me know."
  },
  {
    "objectID": "bobo_points_against_ranked_opponents.html",
    "href": "bobo_points_against_ranked_opponents.html",
    "title": "",
    "section": "",
    "text": "import pandas as pd\nimport json\n\n\ndef get_coordinator(year):\n    if 2000 <= year <= 2006:\n        return 'Richt'\n    elif 2007 <= year <= 2014:\n        return 'Bobo'\n    elif 2015 <= year <= 2015:\n        return 'Schottenheimer'\n    elif 2016 <= year <= 2018:\n        return 'Chaney'\n    elif 2019 <= year <= 2019:\n        return 'Coley'\n    elif 2020 <= year <= 2022:\n        return 'Monken'\n    else:\n        return 'NA'\n\n\n# get all final team rankings\n# get all game scores\n# merge and filter to ranked teams\n\n\n# get all final team rankings\ndef open_file(year):\n    with open(f'data/get_rankings/get_rankings_{year}.json', 'r') as f:\n        return [x['ranks'] for x in json.loads(f.read())[-1]['polls'] if x['poll'] == \"AP Top 25\"][0]\n\n\nrankings_df = None\nfor year in range(2007, 2023):\n    df_year = pd.DataFrame(open_file(year))\n    df_year['year'] = year\n    if rankings_df is None:\n        rankings_df = df_year\n    else:\n        rankings_df = pd.concat([rankings_df, df_year])\n\n\nrankings_df['coordinator'] = rankings_df.year.apply(get_coordinator)\n\n\nrankings_df.head()\n\n\n\n\n\n  \n    \n      \n      rank\n      school\n      conference\n      first_place_votes\n      points\n      year\n      coordinator\n    \n  \n  \n    \n      0\n      1\n      LSU\n      SEC\n      60\n      0\n      2007\n      Bobo\n    \n    \n      1\n      2\n      Georgia\n      SEC\n      3\n      0\n      2007\n      Bobo\n    \n    \n      2\n      3\n      USC\n      Pac-10\n      1\n      0\n      2007\n      Bobo\n    \n    \n      3\n      4\n      Missouri\n      Big 12\n      0\n      0\n      2007\n      Bobo\n    \n    \n      4\n      5\n      Ohio State\n      Big Ten\n      0\n      0\n      2007\n      Bobo\n    \n  \n\n\n\n\n\n# get all game scores\ndef open_game_scores_file(year):\n    with open(f'data/get_games/get_games_{year}.json', 'r') as f:\n        return [x for x in json.loads(f.read()) if x['home_team'] == \"Georgia\" or x['away_team'] == \"Georgia\"]\n\n\ngame_scores_df = None\nfor year in range(2007, 2023):\n    df_year = pd.DataFrame(open_game_scores_file(year))\n    df_year['year'] = year\n    if game_scores_df is None:\n        game_scores_df = df_year\n    else:\n        game_scores_df = pd.concat([game_scores_df, df_year])\n\n\ngame_scores_df.head()\n\n\n\n\n\n  \n    \n      \n      id\n      season\n      week\n      season_type\n      start_date\n      start_time_tbd\n      completed\n      neutral_site\n      conference_game\n      attendance\n      ...\n      away_division\n      away_points\n      away_line_scores\n      away_post_win_prob\n      away_pregame_elo\n      away_postgame_elo\n      excitement_index\n      highlights\n      notes\n      year\n    \n  \n  \n    \n      0\n      272440061\n      2007\n      1\n      regular\n      2007-09-01T22:45:00.000Z\n      None\n      True\n      False\n      False\n      92746\n      ...\n      fbs\n      14\n      [7, 7, 0, 0]\n      NaN\n      1616.0\n      1578.0\n      NaN\n      None\n      None\n      2007\n    \n    \n      1\n      272510061\n      2007\n      2\n      regular\n      2007-09-08T21:45:00.000Z\n      None\n      True\n      False\n      True\n      0\n      ...\n      fbs\n      16\n      [7, 3, 3, 3]\n      NaN\n      1665.0\n      1678.0\n      NaN\n      None\n      None\n      2007\n    \n    \n      2\n      272580061\n      2007\n      3\n      regular\n      2007-09-15T17:00:00.000Z\n      False\n      True\n      False\n      False\n      0\n      ...\n      fcs\n      16\n      [3, 6, 0, 7]\n      NaN\n      NaN\n      NaN\n      NaN\n      None\n      None\n      2007\n    \n    \n      3\n      272650333\n      2007\n      4\n      regular\n      2007-09-22T23:45:00.000Z\n      None\n      True\n      False\n      True\n      92138\n      ...\n      fbs\n      26\n      [7, 3, 7, 3, 6]\n      NaN\n      1752.0\n      1749.0\n      NaN\n      None\n      None\n      2007\n    \n    \n      4\n      272720061\n      2007\n      5\n      regular\n      2007-09-29T17:07:00.000Z\n      None\n      True\n      False\n      True\n      92746\n      ...\n      fbs\n      17\n      [7, 3, 7, 0]\n      NaN\n      1373.0\n      1342.0\n      NaN\n      None\n      None\n      2007\n    \n  \n\n5 rows × 34 columns\n\n\n\n\nhome_slice = game_scores_df.home_team == \"Georgia\"\n\n\ngame_scores_df.columns\n\nIndex(['id', 'season', 'week', 'season_type', 'start_date', 'start_time_tbd',\n       'completed', 'neutral_site', 'conference_game', 'attendance',\n       'venue_id', 'venue', 'home_id', 'home_team', 'home_conference',\n       'home_division', 'home_points', 'home_line_scores',\n       'home_post_win_prob', 'home_pregame_elo', 'home_postgame_elo',\n       'away_id', 'away_team', 'away_conference', 'away_division',\n       'away_points', 'away_line_scores', 'away_post_win_prob',\n       'away_pregame_elo', 'away_postgame_elo', 'excitement_index',\n       'highlights', 'notes', 'year'],\n      dtype='object')\n\n\n\nhome_games = game_scores_df[home_slice][['id','season','home_points', 'away_team', 'away_points', 'year']]\nhome_games.columns = ['id','season','UGA_points', 'opponent', 'opponent_points', 'year']\n\naway_games = game_scores_df[~home_slice][['id','season','away_points', 'home_team', 'home_points', 'year']]\naway_games.columns = ['id','season','UGA_points', 'opponent', 'opponent_points', 'year']\n\nuga_games = pd.concat([home_games, away_games])\n\n\nuga_games.shape\n\n(215, 6)\n\n\n\nuga_games['school'] = uga_games['opponent']\n\n\nranked_games = pd.merge(uga_games, rankings_df, how='inner', on=['school', 'year'])\n\n\nranked_games.head()\n\n\n\n\n\n  \n    \n      \n      id\n      season\n      UGA_points\n      opponent\n      opponent_points\n      year\n      school\n      rank\n      conference\n      first_place_votes\n      points\n      coordinator\n    \n  \n  \n    \n      0\n      273140061\n      2007\n      45\n      Auburn\n      20\n      2007\n      Auburn\n      15\n      SEC\n      0\n      0\n      Bobo\n    \n    \n      1\n      280010061\n      2007\n      41\n      Hawai'i\n      10\n      2007\n      Hawai'i\n      19\n      Western Athletic\n      0\n      0\n      Bobo\n    \n    \n      2\n      282710061\n      2008\n      30\n      Alabama\n      41\n      2008\n      Alabama\n      6\n      SEC\n      0\n      0\n      Bobo\n    \n    \n      3\n      283060061\n      2008\n      10\n      Florida\n      49\n      2008\n      Florida\n      1\n      SEC\n      48\n      0\n      Bobo\n    \n    \n      4\n      283340061\n      2008\n      42\n      Georgia Tech\n      45\n      2008\n      Georgia Tech\n      22\n      ACC\n      0\n      0\n      Bobo\n    \n  \n\n\n\n\n\nranked_games.groupby('coordinator').UGA_points.describe()#.sort_values(by='UGA_points', ascending=False)\n\n\n\n\n\n  \n    \n      \n      count\n      mean\n      std\n      min\n      25%\n      50%\n      75%\n      max\n    \n    \n      coordinator\n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Bobo\n      36.0\n      28.333333\n      12.923953\n      6.0\n      17.00\n      30.0\n      41.00\n      48.0\n    \n    \n      Chaney\n      14.0\n      25.857143\n      11.373770\n      10.0\n      17.75\n      25.5\n      31.00\n      54.0\n    \n    \n      Coley\n      5.0\n      20.800000\n      6.300794\n      10.0\n      21.00\n      23.0\n      24.00\n      26.0\n    \n    \n      Monken\n      16.0\n      35.625000\n      13.583691\n      10.0\n      26.25\n      33.5\n      45.75\n      65.0\n    \n    \n      Schottenheimer\n      3.0\n      14.666667\n      14.571662\n      3.0\n      6.50\n      10.0\n      20.50\n      31.0"
  },
  {
    "objectID": "heisman_top_3_scrape.html",
    "href": "heisman_top_3_scrape.html",
    "title": "",
    "section": "",
    "text": "import pandas as pd\n\n\nodf = pd.read_html('https://www.ncaa.com/news/football/article/2022-12-10/heisman-trophy-winners-and-runners-each-year-1935')[0]\n\n\nodf.columns\n\nIndex(['Year', 'WINNER', '2nd', '3rd'], dtype='object')\n\n\n\nodf.columns = ['Year', 'Winner', 'Second', 'Third']\n\n\nodf.head()\n\n\n\n\n\n  \n    \n      \n      Year\n      Winner\n      Second\n      Third\n    \n  \n  \n    \n      0\n      1935\n      Jay Berwanger - RB,  Chicago\n      Monk Meyer - RB,  Army\n      Bill Shakespeare - RB,  Notre Dame\n    \n    \n      1\n      1936\n      Larry Kelley - TE,  Yale\n      Sam Francis - RB,  Nebraska\n      Ray Buivid - RB,  Marquette\n    \n    \n      2\n      1937\n      Clinton Frank - HB,  Yale\n      Byron White - RB,  Colorado\n      Marshall Goldberg - RB,  Pittsburgh\n    \n    \n      3\n      1938\n      Davey O’Brien - QB,  TCU\n      Marshall Goldberg - RB,  Pittsburgh\n      Sid Luckman - QB,  Columbia\n    \n    \n      4\n      1939\n      Nile Kinnick - RB,  Iowa\n      Tom Harmon - RB,  Michigan\n      Paul Christman - QB,  Missouri\n    \n  \n\n\n\n\n\ndf = odf.set_index('Year').stack().reset_index()\n\n\ndf.head()\n\n\n\n\n\n  \n    \n      \n      Year\n      level_1\n      0\n      player\n    \n  \n  \n    \n      0\n      1935\n      Winner\n      Jay Berwanger - RB,  Chicago\n      Jay Berwanger\n    \n    \n      1\n      1935\n      Second\n      Monk Meyer - RB,  Army\n      Monk Meyer\n    \n    \n      2\n      1935\n      Third\n      Bill Shakespeare - RB,  Notre Dame\n      Bill Shakespeare\n    \n    \n      3\n      1936\n      Winner\n      Larry Kelley - TE,  Yale\n      Larry Kelley\n    \n    \n      4\n      1936\n      Second\n      Sam Francis - RB,  Nebraska\n      Sam Francis\n    \n  \n\n\n\n\n\ndf['player'] = df[0].str.split(' - ').str.get(0).str.strip()\n\n\ndf['position'] = df[0].str.split(' - ').str.get(1).str.split(', ').str.get(0).str.strip()\n\n\ndf['school'] = df[0].str.split(' - ').str.get(1).str.split(', ').str.get(1).str.strip()\n\n\ndf.head()\n\n\n\n\n\n  \n    \n      \n      Year\n      level_1\n      0\n      player\n      position\n      school\n    \n  \n  \n    \n      0\n      1935\n      Winner\n      Jay Berwanger - RB,  Chicago\n      Jay Berwanger\n      RB\n      Chicago\n    \n    \n      1\n      1935\n      Second\n      Monk Meyer - RB,  Army\n      Monk Meyer\n      RB\n      Army\n    \n    \n      2\n      1935\n      Third\n      Bill Shakespeare - RB,  Notre Dame\n      Bill Shakespeare\n      RB\n      Notre Dame\n    \n    \n      3\n      1936\n      Winner\n      Larry Kelley - TE,  Yale\n      Larry Kelley\n      TE\n      Yale\n    \n    \n      4\n      1936\n      Second\n      Sam Francis - RB,  Nebraska\n      Sam Francis\n      RB\n      Nebraska\n    \n  \n\n\n\n\n\ndf.columns = ['year', 'result', \"original_text\", 'player', 'position', 'school']\n\n\ndf.to_csv(\"heisman_top_three.csv\", index=False)\n\n\ndf.groupby([\"Result\", 'school']).count()[['Year']].plot.bar()\n\n<AxesSubplot:xlabel='Result,school'>\n\n\n\n\n\n\ndf.groupby([\"Result\", 'position']).count()[['Year']].plot.bar()\n\n<AxesSubplot:xlabel='Result,position'>\n\n\n\n\n\n\ndf.groupby(['position']).count()[['Year']].plot.bar()\n\n<AxesSubplot:xlabel='position'>"
  },
  {
    "objectID": "cfb_stats.html",
    "href": "cfb_stats.html",
    "title": "",
    "section": "",
    "text": "import pandas as pd\n\n\ntest = pd.read_html(\"http://cfbstats.com/2022/team/257/roster.html\")[0]\n\n\ntest\n\n\n\n\n\n  \n    \n      \n      No\n      Name\n      Pos\n      Yr\n      Ht\n      Wt\n      Hometown\n      Last School\n    \n  \n  \n    \n      0\n      99\n      Alexander, Bear\n      DL\n      FR\n      6-3\n      305\n      Terrell, TX\n      IMG Academy\n    \n    \n      1\n      92\n      Badger, Liam\n      PK\n      FR\n      5-11\n      175\n      Cumming, GA\n      West Forsyth\n    \n    \n      2\n      66\n      Bah, Aliou\n      OL\n      FR\n      6-5\n      330\n      Memphis, TN\n      IMG Academy\n    \n    \n      3\n      94\n      Bates, Henry\n      PK\n      FR\n      5-11\n      170\n      Waycross, GA\n      Ware County\n    \n    \n      4\n      33\n      Beal, Jr., Robert\n      OLB\n      SR\n      6-4\n      250\n      Duluth, GA\n      Peachtree Ridge\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      136\n      37\n      Waters, Woody\n      WR\n      SO\n      5-8\n      160\n      Newnan, GA\n      Newnan\n    \n    \n      137\n      13\n      Williams, Mykel\n      DL\n      FR\n      6-5\n      265\n      Columbus, GA\n      Hardaway\n    \n    \n      138\n      77\n      Willock, Devin\n      OL\n      SO\n      6-7\n      335\n      New Milford, NJ\n      Paramus Catholic\n    \n    \n      139\n      55\n      Wilson, Jared\n      OL\n      FR\n      6-3\n      300\n      Winston-Salem, NC\n      West Forsyth HS\n    \n    \n      140\n      99\n      Zirkel, Jared\n      PK\n      SO\n      6-3\n      185\n      Kerrville, TX\n      Tivy\n    \n  \n\n141 rows × 8 columns\n\n\n\n\nlen(test)\n\n1"
  },
  {
    "objectID": "download_logos.html",
    "href": "download_logos.html",
    "title": "",
    "section": "",
    "text": "from os.path import join, exists\nimport os\nimport pandas as pd\nimport numpy as np\nfrom bs4 import BeautifulSoup\nimport requests\nfrom io import BytesIO\nimport numpy as np\nfrom PIL import Image\n# from skimage.segmentation import felzenszwalb\nfrom logo import Logo\n\n\nIMAGE_SAVE_DIR = 'logos'\nTRANSPARENT_BG = 'transparent_bg'\nWHITE_BG = 'white_bg'\nif not exists(join(IMAGE_SAVE_DIR, TRANSPARENT_BG)):\n    os.makedirs(join(IMAGE_SAVE_DIR, TRANSPARENT_BG))\nif not exists(join(IMAGE_SAVE_DIR, WHITE_BG)):\n    os.makedirs(join(IMAGE_SAVE_DIR, WHITE_BG))\n\n\ndef clean_img(img, bg_color_distance_threshold=10, scale=100, sigma=0., min_size=90):\n    # labels = felzenszwalb(img, scale=scale, sigma=sigma, min_size=min_size)\n    # np_img = np.array(img)\n    # height, width = np_img.shape[:2]\n    # np_img[:,:,3][labels == labels[0][0]] = 0\n    # np_img[:,:,3][labels == labels[0][width-1]] = 0\n    # np_img[:,:,3][labels == labels[height-1][width-1]] = 0\n    # np_img[:,:,3][labels == labels[height-1][0]] = 0\n    # return Image.fromarray(np_img)\n    logo = Logo(img, bg_color_distance_threshold=bg_color_distance_threshold,\n                    scale=scale, sigma=sigma, min_size=min_size, character_bounding_threshold=.03)\n    return logo.get_bgr(), logo.get_new_bgr()\n    \n\n\n# Retrieve the HTML content\n# spans = ['a-c', 'd-h', 'i-m', 'n-r', 's-t', 'u-y']\n# spans = ['d-h']\nurls = [f'https://www.sportslogos.net/teams/list_by_league/{x}/NCAA_Division_I_a-c/NCAA_a-c/logos/' for x in range(33,37)]\nfor url in urls:\n    print(url)\n    response = requests.get(url)\n    html = response.content\n    soup = BeautifulSoup(html, 'html.parser')\n    logos = soup.find(\"ul\", {\"class\": \"logoWall\"}).find_all(\"a\")\n    for logo in logos:\n        filename = logo.text.strip().replace(\" \", \"_\").replace('/','-') + '.png'\n        # if 'alabama' not in filename.lower():\n        #     continue\n        print(logo.text.strip())\n        logo_link = logo.img['src']\n        response = requests.get(logo_link)\n        img = Image.open(BytesIO(response.content)).convert('RGBA')\n        cleaned_img = clean_img(img)\n        cleaned_img[0].save(join(IMAGE_SAVE_DIR, TRANSPARENT_BG, 'single_' + filename))\n        cleaned_img[1].save(join(IMAGE_SAVE_DIR, TRANSPARENT_BG, 'double_' + filename))\n        # cleaned_img.save(join(IMAGE_SAVE_DIR, TRANSPARENT_BG, filename))\n        img.save(join(IMAGE_SAVE_DIR, WHITE_BG, filename))\n\n\nimg = Image.open(join(IMAGE_SAVE_DIR, WHITE_BG, 'Air_Force_Falcons.png'))\nlogo = Logo(img, bg_color_distance_threshold=10, scale=100, sigma=0., min_size=90, character_bounding_threshold=.03)\n\n\ncomp_color_img, _ = logo.get_canny_component_map()\n\n\n# comp_color_img = logo.get_component_color_image()\nheight, width = comp_color_img.shape[:2]\ntop_left_comp = comp_color_img[0][0]\ntop_right_comp = comp_color_img[0][width-1]\nbottom_left_comp = comp_color_img[height-1][0]\nbottom_right_comp = comp_color_img[height-1][width-1]\nImage.fromarray((comp_color_img[(comp_color_img == top_left_comp) | (comp_color_img == bottom_left_comp)] * 255).astype(np.uint8))\n(comp_color_img[(comp_color_img == top_left_comp) | (comp_color_img == bottom_left_comp)] * 255).astype(np.uint8).shape #.reshape((height, width)).shape\n\n(5317,)\n\n\n\nnp_img = np.array(img)\n\n\nnp_img[(comp_color_img == top_left_comp) | (comp_color_img == bottom_right_comp),3] = 0\n\n\nImage.fromarray(np_img).save('test.png')\n\n\ncomp_color_img.shape\n\n(100, 150)\n\n\n\ncomp_color_img.shape\n\n(100, 150, 3)\n\n\n\nfrom skimage.segmentation import felzenszwalb\n\n\nfelzenszwalb(\n\n\nfilename\n\n'Abilene_Christian_Wildcats.png'\n\n\n\nmydivs.find_all(\"a\")[0].img['src']\n\n'https://content.sportslogos.net/logos/30/5071/thumbs/507177262013.gif'\n\n\n\n# Find the list element and extract the list items\nlist_element = soup.find('ul')\nlist_items = list_element.find_all('li')\n\n# Convert the list items to a pandas DataFrame\ndata = []\nfor item in list_items:\n    data.append(item.get_text())\n\ndf = pd.DataFrame(data, columns=['List Items'])"
  },
  {
    "objectID": "scrape_rivals_team_rankings.html",
    "href": "scrape_rivals_team_rankings.html",
    "title": "",
    "section": "",
    "text": "import os\nfrom os.path import join, exists\nimport time\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.common.exceptions import TimeoutException\nfrom joblib import Parallel, delayed \nfrom time import sleep\nfrom datetime import datetime\nfrom bs4 import BeautifulSoup\nimport pandas as pd\n\n\nimport logging\nlogger = logging.getLogger(\"mylogger\")\nlogger.setLevel(logging.INFO)\nsh = logging.StreamHandler()\nsh.setFormatter(logging.Formatter(\"%(asctime)s %(levelname)-8s %(message)s\"))\nfh = logging.FileHandler('log.txt', mode='a')\nfh.setFormatter(logging.Formatter(\"%(asctime)s %(levelname)-8s %(message)s\"))\nlogger.addHandler(sh)\nlogger.addHandler(fh)\n\n\nRIVALS_DIR = 'rivals'\nTEAMS_DIR = 'teams'\nif not exists(join(RIVALS_DIR, TEAMS_DIR)):\n    os.makedirs(join(RIVALS_DIR, TEAMS_DIR))\n\n\ndef get_team_rankings_by_year(year):\n    PAGE_LOAD_TIMEOUT = 60\n    options = webdriver.ChromeOptions()\n\n    options.add_argument('--headless')\n    # options.headless = True\n    options.add_argument('--no-sandbox')\n    options.add_argument('--disable-dev-shm-usage')\n    # open it, go to a website, and get results\n    driver = webdriver.Chrome('/Users/bleathers/Documents/Personal/wiki_table_scrape_uga_scores/chromedriver_mac64/chromedriver', options=options)\n    driver.get(f'https://n.rivals.com/team_rankings/{year}/all-teams/football')\n    \n    time.sleep(5)\n    tag_name = 'rv-team-rankings'\n    WebDriverWait(driver, PAGE_LOAD_TIMEOUT).until(EC.presence_of_element_located((By.TAG_NAME, tag_name)))\n    # element = WebDriverWait(driver, PAGE_LOAD_TIMEOUT).until(EC.presence_of_element_located((By.XPATH, \"//span[@class='ordinality ng-binding ng-scope' and @ng-if='category.dataType == \\\"rank\\\"' and text()='11']\")))\n    html = driver.page_source \n    dfs = pd.read_html(html)\n    driver.close()\n    return [x for x in dfs if 'POINTS' in x.columns][0]\n\n\ntest = get_team_rankings_by_year(2023) \n\n/Users/bleathers/.pyenv/versions/3.7.9/envs/scratch/lib/python3.7/site-packages/ipykernel_launcher.py:10: DeprecationWarning: executable_path has been deprecated, please pass in a Service object\n  # Remove the CWD from sys.path while we load stuff.\n\n\n\nfor year in range(2010, 2024):\n    print(year)\n    df = get_team_rankings_by_year(year)\n    df[[x for x in df.columns if 'named' not in x]].to_csv(join(RIVALS_DIR, TEAMS_DIR, f'{year}.csv'), index=False)\n\n2010\n\n\n/Users/bleathers/.pyenv/versions/3.7.9/envs/scratch/lib/python3.7/site-packages/ipykernel_launcher.py:10: DeprecationWarning: executable_path has been deprecated, please pass in a Service object\n  # Remove the CWD from sys.path while we load stuff.\n\n\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n2019\n2020\n2021\n2022\n2023"
  },
  {
    "objectID": "bobo_graphs.html",
    "href": "bobo_graphs.html",
    "title": "",
    "section": "",
    "text": "import pandas as pd\nimport matplotlib.pyplot as plt\n\n\nblack = '#000000'\nred = '#BA0C2F'\nlake_blue = '#00A3AD'\nhedges = '#B4BD00'\ngrey = '#9EA2A2'\ncolors = [black, red, lake_blue, hedges, grey]\n\n\ndata = pd.read_csv('all_years_w_recruiting.csv')\n\n\ndata['Rank'] = data.Rank.str.split(pat=' ', expand=True).iloc[:,1]\n\n\ndata.head()\n\n\n\n\n\n  \n    \n      \n      Date\n      Time\n      Opponent\n      Rank\n      Site\n      TV\n      Result\n      UGA Points\n      Opponent Points\n      OT?\n      Attendance\n      Year\n      Coordinator\n      4 Year Avg. Recruiting Points\n    \n  \n  \n    \n      0\n      September 1\n      6:45 p.m.\n      Oklahoma State*\n      13\n      Sanford StadiumAthens, GA\n      ESPN2\n      W\n      35\n      14\n      NaN\n      92746\n      2007\n      Bobo\n      2054.75\n    \n    \n      1\n      September 8\n      5:45 p.m.\n      South Carolina\n      11\n      Sanford StadiumAthens, GA (rivalry)\n      ESPN2\n      L\n      12\n      16\n      NaN\n      92746\n      2007\n      Bobo\n      2054.75\n    \n    \n      2\n      September 15\n      1:00 p.m.\n      Western Carolina*\n      23\n      Sanford StadiumAthens, GA\n      CSS\n      W\n      45\n      16\n      NaN\n      92746\n      2007\n      Bobo\n      2054.75\n    \n    \n      3\n      September 22\n      7:45 p.m.\n      at No. 16 Alabama\n      22\n      Bryant–Denny StadiumTuscaloosa, AL (rivalry) (...\n      ESPN\n      W\n      26\n      23\n      OT\n      92138\n      2007\n      Bobo\n      2054.75\n    \n    \n      4\n      September 29\n      1:00 p.m.[5]\n      Ole Miss\n      15\n      Sanford StadiumAthens, GA\n      LFS\n      W\n      45\n      17\n      NaN\n      92746\n      2007\n      Bobo\n      2054.75\n    \n  \n\n\n\n\n\ndata.groupby('Coordinator')[['UGA Points', '4 Year Avg. Recruiting Points']].mean().reset_index().plot.scatter(y='UGA Points', x='4 Year Avg. Recruiting Points')\n\n<AxesSubplot:xlabel='4 Year Avg. Recruiting Points', ylabel='UGA Points'>\n\n\n\n\n\n\ndf = data.groupby('Coordinator')[['UGA Points', '4 Year Avg. Recruiting Points']].mean().reset_index()\n\n\n# Create a plot\nfig, ax = plt.subplots()\n\n\n\n\n\ndef format_plot(ax, title, subtitle, x_label, y_label, title_font='NCAA Georgia Bulldog Bold', subtitle_font='Arial', axis_font='Arial', grid_color='#dddddd'):\n    # Set title font\n    \n    \n    # Set plot title, subtitle, and axis labels\n    ax.set_title(title, fontsize=18+2)\n    # ax.subtitle(subtitle)\n    ax.set_xlabel(x_label, fontsize=12)\n    ax.set_ylabel(y_label, fontsize=12)\n    \n    ax.set_title(ax.get_title(), fontdict={'fontname': title_font, 'fontsize': 18})\n    # ax.set_title(ax.get_title(), fontdict={'fontfamily': title_font, 'fontsize': 18})\n\n    # Set subtitle font\n    for item in ax.texts:\n        if item.get_text() != ax.get_title():\n            item.set_fontsize(14)\n            item.set_fontname(subtitle_font)\n\n    # Set axis font\n    for item in ([ax.xaxis.label, ax.yaxis.label] +\n                 ax.get_xticklabels() + ax.get_yticklabels()):\n        item.set_fontname(axis_font)\n        item.set_fontsize(12)\n\n    # Add grid\n    ax.grid(color=grid_color, linestyle='--')\n\n    # Adjust padding\n    plt.tight_layout()\n    return ax\n\n\nax = format_plot(ax, 'UGA OC Comparison', 'subtitle', 'x_label', 'y_label', title_font=\"NCAA Georgia Bulldog Bold\")\n# Add data to the plot\nscatter = ax.scatter(df['4 Year Avg. Recruiting Points'], df['UGA Points'], c=colors, s=100)\nfig\n\n\n\n\n<Figure size 432x288 with 0 Axes>\n\n\n\nfrom matplotlib import font_manager\nfont_manager.findSystemFonts(fontpaths=None, fontext=\"ttf\")\nfont_dirs = ['/Users/bleathers/Library/Fonts']\nfont_files = font_manager.findSystemFonts(fontpaths=font_dirs)\n\nfor font_file in font_files:\n    font_manager.fontManager.addfont(font_file)\n\n\nfont_files\n\n['/Users/bleathers/Library/Fonts/Oswald-ExtraLight.ttf',\n '/Users/bleathers/Library/Fonts/Oswald-Medium.ttf',\n '/Users/bleathers/Library/Fonts/mustardo.ttf',\n '/Users/bleathers/Library/Fonts/MerriweatherSans-VariableFont_wght.ttf',\n '/Users/bleathers/Library/Fonts/Oswald-Regular.ttf',\n '/Users/bleathers/Library/Fonts/Oswald-SemiBold.ttf',\n '/Users/bleathers/Library/Fonts/NCAA_Georgia_Bulldog_Bold.ttf',\n '/Users/bleathers/Library/Fonts/Oswald-VariableFont_wght.ttf',\n '/Users/bleathers/Library/Fonts/MerriweatherSans-Italic-VariableFont_wght.ttf',\n '/Users/bleathers/Library/Fonts/Oswald-Light.ttf',\n '/Users/bleathers/Library/Fonts/POST.TTF',\n '/Users/bleathers/Library/Fonts/Oswald-Bold.ttf']\n\n\n\nfont_manager.findfont(\"NCAA Georgia Bulldog Bold\")\n\n'/Users/bleathers/Library/Fonts/NCAA_Georgia_Bulldog_Bold.ttf'\n\n\n\n# type(scatter)\n\n\n\n\n\n# def format_plot(df, title, subtitle, x_label, y_label, font_size=14, font_name='Arial', grid=True):\n#     # Configure plot font\n#     plt.rcParams['font.size'] = font_size\n#     plt.rcParams['font.family'] = font_name\n    \n    \n#     # Set plot title, subtitle, and axis labels\n#     ax.set_title(title, fontsize=font_size+2)\n#     ax.set_xlabel(x_label, fontsize=font_size)\n#     ax.set_ylabel(y_label, fontsize=font_size)\n    \n#     # Add labels to the data points\n#     for i, txt in enumerate(df['label_column']):\n#         ax.text(df['x_column'][i]+0.1, df['y_column'][i]+0.1, txt, fontsize=font_size-2)\n    \n#     # Add a legend to the plot\n#     legend = ax.legend(*scatter.legend_elements(), title='Legend Title', loc='upper right')\n#     ax.add_artist(legend)\n    \n#     # Add a grid to the plot\n#     if grid:\n#         ax.grid(color='gray', linestyle='-', linewidth=0.25, alpha=0.5)\n    \n#     # Return the plot object\n#     return fig, ax\n\n# # Load data from a CSV file into a Pandas DataFrame\n# df = pd.read_csv('data.csv')\n\n# # Call the format_plot function to create a scatter plot of the data\n# fig, ax = format_plot('Scatter Plot', 'Example Plot', 'X Axis', 'Y Axis')\n\n# # Display the plot\n# plt.show()"
  },
  {
    "objectID": "CollegeFootballData.html",
    "href": "CollegeFootballData.html",
    "title": "",
    "section": "",
    "text": "api_key = 'FqbkCUnQOvBbWVrpY99c4m0TgnzjqCmYENGDpGIm72IgNZPakm/Jw2+97pMTklcw'\n\n\nimport json\nimport os\nimport pandas as pd\nfrom pandas import json_normalize\n\n\nimport sqlite3\n\n\nconn = sqlite3.connect('cfbd.db')\n\n\nimport cfbd\n\n\nfrom __future__ import print_function\nimport time\nimport cfbd\nfrom cfbd.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: ApiKeyAuth\nconfiguration = cfbd.Configuration()\nconfiguration.api_key['Authorization'] = api_key\nconfiguration.api_key_prefix['Authorization'] = 'Bearer'\n\n\ndef save_data(sub_dir, filename, data):\n    path = \"data/\" + sub_dir\n    isExist = os.path.exists(path)\n    if not isExist:\n        os.makedirs(path)\n    with open(path + '/' + filename, 'w') as f:\n        f.write(data)\n\n\n# create an instance of the API class\napi_instance = cfbd.RecruitingApi(cfbd.ApiClient(configuration))\n\n\ndef pull_data(year):\n    regular = api_instance.get_recruiting_teams(year=year)\n    # post_season = api_instance.get_roster(year=year, season_type = 'postseason')\n    api_response = [x.to_dict() for x in regular] #+ [x.to_dict() for x in post_season]\n    # [mydict['player_year'] = mydict.pop('year') for mydict in api_response]\n    # for mydict in api_response:\n    #     mydict['player_year'] = mydict.pop('year')\n    save_data('get_recruiting_teams', f'get_recruiting_teams_{year}.json', json.dumps(api_response))\n    return api_response\n\n\ndta = pull_data(year=2022) #= pull_data(2020)\n\n\n# dta\n\n\nfor year in range(2021, 1980, -1):\n    try:\n        if year % 5 == 0:\n            print(year)\n        pull_data(year)\n    except:\n        print(f\"Didn't work on {year}.\")\n        break\n\n2020\n2015\n2010\n2005\n2000\nDidn't work on 1999.\n\n\n\ndef load_to_df(folder):\n    if len(folder) < 4 or folder[:4] != 'data':\n        folder = 'data/' + folder\n        \n    dir_list = os.listdir(folder)\n    df = None\n    for file in dir_list:\n        if file[0] == '.':\n            continue\n        with open(folder + '/' + file, 'r') as f:\n            year = json.loads(f.read())\n        year_df = pd.json_normalize(year)\n        year_df['year'] = int(file.split('_')[-1].split('.')[0])\n        if df is None:\n            df = year_df.copy()\n        else:\n            df = pd.concat([df, year_df])\n    return df\n        \n\n\nget_transfer_portal = load_to_df('get_transfer_portal')\n\n\ndef load_lines_to_df(folder, record_path, meta):\n    if len(folder) < 4 or folder[:4] != 'data':\n        folder = 'data/' + folder\n        \n    dir_list = os.listdir(folder)\n    df = None\n    for file in dir_list:\n        if file[0] == '.':\n            continue\n        with open(folder + '/' + file, 'r') as f:\n            year = json.loads(f.read())\n        year_df = pd.json_normalize(year, record_path=record_path, meta=meta)\n        # year_df['year'] = int(file.split('_')[-1].split('.')[0])\n        if df is None:\n            df = year_df.copy()\n        else:\n            df = pd.concat([df, year_df])\n    return df\n\n\nget_coaches = load_lines_to_df('get_coaches', ['seasons'], ['first_name', 'last_name', 'hire_date'])\n\n\n# with open(\"data/get_lines\" + '/' + \"get_lines_2022.json\", 'r') as f:\n#     year = json.loads(f.read())\n#     test2 = pd.json_normalize(year, record_path=['lines'], meta=['id', 'season', 'week', 'season_type', 'start_date', 'home_team',\n#        'home_conference', 'home_score', 'away_team', 'away_conference',\n#        'away_score'])\n# test2.head()\n\n\n# test.columns\n\nIndex(['id', 'season', 'week', 'season_type', 'start_date', 'home_team',\n       'home_conference', 'home_score', 'away_team', 'away_conference',\n       'away_score', 'lines'],\n      dtype='object')\n\n\n\nget_coaches.to_sql(\"get_coaches\", conn, if_exists=\"replace\")\n\n\nget_coaches.shape\n\n(11957, 15)\n\n\n\nget_coaches[(get_coaches.last_name.str.lower() == \"richt\")].sort_values(by='year')\n\n\n\n\n\n  \n    \n      \n      school\n      year\n      games\n      wins\n      losses\n      ties\n      preseason_rank\n      postseason_rank\n      srs\n      sp_overall\n      sp_offense\n      sp_defense\n      first_name\n      last_name\n      hire_date\n    \n  \n  \n    \n      87\n      Georgia\n      2001\n      12\n      8\n      4\n      0\n      NaN\n      22.0\n      12.3\n      13.3\n      34.2\n      22.2\n      Mark\n      Richt\n      None\n    \n    \n      87\n      Georgia\n      2002\n      14\n      13\n      1\n      0\n      8.0\n      3.0\n      20.8\n      25.2\n      39.9\n      15.9\n      Mark\n      Richt\n      None\n    \n    \n      89\n      Georgia\n      2003\n      14\n      11\n      3\n      0\n      11.0\n      7.0\n      18.7\n      26.5\n      37.2\n      11.3\n      Mark\n      Richt\n      None\n    \n    \n      88\n      Georgia\n      2004\n      12\n      10\n      2\n      0\n      3.0\n      7.0\n      16.4\n      21.8\n      35.2\n      14.1\n      Mark\n      Richt\n      None\n    \n    \n      85\n      Georgia\n      2005\n      13\n      10\n      3\n      0\n      13.0\n      10.0\n      16.1\n      22.3\n      36.1\n      13.8\n      Mark\n      Richt\n      None\n    \n    \n      88\n      Georgia\n      2006\n      13\n      9\n      4\n      0\n      15.0\n      23.0\n      10.6\n      17.8\n      28.7\n      11.3\n      Mark\n      Richt\n      None\n    \n    \n      90\n      Georgia\n      2007\n      13\n      11\n      2\n      0\n      13.0\n      2.0\n      19.0\n      23.6\n      38.7\n      16.6\n      Mark\n      Richt\n      None\n    \n    \n      87\n      Georgia\n      2008\n      13\n      10\n      3\n      0\n      1.0\n      13.0\n      12.9\n      20.9\n      39.2\n      18.3\n      Mark\n      Richt\n      None\n    \n    \n      85\n      Georgia\n      2009\n      13\n      8\n      5\n      0\n      13.0\n      NaN\n      9.8\n      19.1\n      33.6\n      16.8\n      Mark\n      Richt\n      None\n    \n    \n      92\n      Georgia\n      2010\n      13\n      6\n      7\n      0\n      23.0\n      NaN\n      10.6\n      22.2\n      41.0\n      20.9\n      Mark\n      Richt\n      None\n    \n    \n      94\n      Georgia\n      2011\n      14\n      10\n      4\n      0\n      19.0\n      19.0\n      12.5\n      22.9\n      32.7\n      10.3\n      Mark\n      Richt\n      None\n    \n    \n      104\n      Georgia\n      2012\n      14\n      12\n      2\n      0\n      6.0\n      5.0\n      22.2\n      28.0\n      44.9\n      16.6\n      Mark\n      Richt\n      None\n    \n    \n      105\n      Georgia\n      2013\n      13\n      8\n      5\n      0\n      5.0\n      NaN\n      15.1\n      25.1\n      44.9\n      21.8\n      Mark\n      Richt\n      None\n    \n    \n      105\n      Georgia\n      2014\n      13\n      10\n      3\n      0\n      12.0\n      9.0\n      23.7\n      27.6\n      44.2\n      16.8\n      Mark\n      Richt\n      None\n    \n    \n      107\n      Georgia\n      2015\n      12\n      9\n      3\n      0\n      9.0\n      NaN\n      10.3\n      16.8\n      28.6\n      10.7\n      Mark\n      Richt\n      None\n    \n    \n      103\n      Miami\n      2016\n      13\n      9\n      4\n      0\n      NaN\n      20.0\n      16.8\n      18.6\n      34.1\n      17.3\n      Mark\n      Richt\n      None\n    \n    \n      107\n      Miami\n      2017\n      13\n      10\n      3\n      0\n      18.0\n      13.0\n      15.8\n      17.4\n      35.3\n      17.0\n      Mark\n      Richt\n      None\n    \n    \n      107\n      Miami\n      2018\n      13\n      7\n      6\n      0\n      8.0\n      None\n      6.9\n      12.7\n      29.3\n      15.8\n      Mark\n      Richt\n      None\n    \n  \n\n\n\n\n\nget_draft_picks.shape\n\n(12050, 23)\n\n\n\ncur = conn.cursor()\n\n\nquery = \"\"\"\nWITH draft_picks AS (\n    SELECT\n        year - 1 AS year,\n        college_athlete_id,\n        college_id,\n        college_team,\n        overall,\n        round,\n        name\n    FROM get_draft_picks\n    WHERE college_team IS NOT NULL\n    AND year IS NOT NULL\n    )\n, coaches AS (\n    SELECT\n        first_name || \" \" || last_name AS coach_name, \n        school AS college_team,\n        year AS year        \n    FROM get_coaches\n)\n\n, combined AS (\n    SELECT\n        year,\n        coach_name,\n        COUNT(overall) AS num_drafted\n    FROM draft_picks\n    LEFT JOIN coaches USING (college_team, year)\n    WHERE coach_name IS NOT NULL\n    GROUP BY 1, 2\n)\n, sorted AS (\nSELECT\n    year, \n    coach_name,\n    college_team,\n    SUM(num_drafted) OVER (PARTITION BY coach_name ORDER BY year ASC) AS cumulative_number_drafted,\n    ROW_NUMBER() OVER (PARTITION BY coach_name ORDER BY year ASC) AS year_coached\nFROM combined\nJOIN coaches USING (coach_name, year)\n)\n\nSELECT\n    *\nFROM sorted\nWHERE year_coached = 6\nORDER BY cumulative_number_drafted DESC\n\"\"\"\ncur.execute(query).fetchall()\n\n[(2006, 'Jim Tressel', 'Ohio State', 47, 6),\n (2006, 'Larry Coker', 'Miami', 47, 6),\n (2021, 'Kirby Smart', 'Georgia', 45, 6),\n (1981, 'John Robinson', 'USC', 40, 6),\n (2015, 'Jimbo Fisher', 'Florida State', 38, 6),\n (2006, 'Mark Richt', 'Georgia', 36, 6),\n (1978, 'Tom Osborne', 'Nebraska', 34, 6),\n (1971, 'Ara Parseghian', 'Notre Dame', 33, 6),\n (1971, 'John McKay', 'USC', 33, 6),\n (2006, 'Pete Carroll', 'USC', 32, 6),\n (2009, 'Urban Meyer', 'Florida', 31, 6),\n (1978, 'Barry Switzer', 'Oklahoma', 30, 6),\n (2003, 'Frank Solich', 'Nebraska', 30, 6),\n (2017, 'Jim Mora', 'UCLA', 30, 6),\n (1998, 'Phillip Fulmer', 'Tennessee', 29, 6),\n (2013, 'Dabo Swinney', 'Clemson', 28, 6),\n (2018, 'Jim Harbaugh', 'Michigan', 28, 6),\n (2007, 'Butch Davis', 'North Carolina', 27, 6),\n (1993, 'Dennis Erickson', 'Miami', 27, 6),\n (2018, 'Lane Kiffin', 'Florida Atlantic', 27, 6),\n (2001, 'Lloyd Carr', 'Michigan', 27, 6),\n (2016, 'David Shaw', 'Stanford', 26, 6),\n (2021, 'Jim McElwain', 'Central Michigan', 26, 6),\n (2007, 'Les Miles', 'LSU', 26, 6),\n (1994, 'R.C. Slocum', 'Texas A&M', 26, 6),\n (2002, 'Tyrone Willingham', 'Notre Dame', 26, 6),\n (2018, 'Will Muschamp', 'South Carolina', 26, 6),\n (1978, 'Bill Mallory', 'Colorado', 25, 6),\n (2001, 'Rick Neuheisel', 'Washington', 25, 6),\n (2012, 'Bo Pelini', 'Nebraska', 24, 6),\n (2004, 'Bob Stoops', 'Oklahoma', 24, 6),\n (2018, 'Ed Orgeron', 'LSU', 24, 6),\n (2007, 'Jeff Tedford', 'California', 24, 6),\n (1973, 'Pepper Rodgers', 'UCLA', 24, 6),\n (2009, 'Brian Kelly', 'Cincinnati', 23, 6),\n (1980, 'Grant Teaff', 'Baylor', 23, 6),\n (1972, 'Bo Schembechler', 'Michigan', 22, 6),\n (2017, 'Bob Davie', 'New Mexico', 22, 6),\n (2011, 'Bret Bielema', 'Wisconsin', 22, 6),\n (2019, 'Clay Helton', 'USC', 22, 6),\n (1981, 'Fred Akers', 'Texas', 22, 6),\n (1982, 'Jackie Sherrill', 'Texas A&M', 22, 6),\n (1991, 'Ken Hatfield', 'Clemson', 22, 6),\n (2017, 'Larry Fedora', 'North Carolina', 22, 6),\n (2001, 'Nick Saban', 'LSU', 22, 6),\n (2014, 'Al Golden', 'Miami', 21, 6),\n (1971, 'Bill Yeoman', 'Houston', 21, 6),\n (1979, 'Chuck Fairbanks', 'Colorado', 21, 6),\n (2017, 'Gus Malzahn', 'Auburn', 21, 6),\n (2004, 'Kirk Ferentz', 'Iowa', 21, 6),\n (2010, 'Kyle Whittingham', 'Utah', 21, 6),\n (2008, 'Ron Zook', 'Illinois', 21, 6),\n (2012, 'Charlie Weis', 'Kansas', 20, 6),\n (2003, 'Dennis Franchione', 'Texas A&M', 20, 6),\n (1978, 'Emory Bellard', 'Texas A&M', 20, 6),\n (1994, 'Gary Moeller', 'Michigan', 20, 6),\n (1971, 'Joe Paterno', 'Penn State', 20, 6),\n (2021, 'Luke Fickell', 'Cincinnati', 20, 6),\n (1997, 'Mike Price', 'Washington State', 20, 6),\n (1994, 'Steve Spurrier', 'Florida', 20, 6),\n (2020, 'Tom Herman', 'Texas', 20, 6),\n (2010, 'Bobby Petrino', 'Arkansas', 19, 6),\n (2016, 'Dana Holgorsen', 'West Virginia', 19, 6),\n (1983, 'Danny Ford', 'Clemson', 19, 6),\n (2018, 'Dave Doeren', 'NC State', 19, 6),\n (2010, 'Dave Wannstedt', 'Pittsburgh', 19, 6),\n (1998, 'Frank Beamer', 'Virginia Tech', 19, 6),\n (2003, 'Houston Nutt', 'Arkansas', 19, 6),\n (2000, 'Jeff Bower', 'Southern Mississippi', 19, 6),\n (1996, 'Ted Tollner', 'San Diego State', 19, 6),\n (2005, 'Chuck Amato', 'NC State', 18, 6),\n (2014, 'Dan Mullen', 'Mississippi State', 18, 6),\n (2018, 'Paul Chryst', 'Wisconsin', 18, 6),\n (2002, 'Tommy West', 'Memphis', 18, 6),\n (1982, 'Warren Powers', 'Missouri', 18, 6),\n (1990, 'Bobby Ross', 'Georgia Tech', 17, 6),\n (2016, 'Butch Jones', 'Tennessee', 17, 6),\n (2015, 'Charlie Strong', 'Texas', 17, 6),\n (2019, 'Chip Kelly', 'UCLA', 17, 6),\n (2012, 'Chris Petersen', 'Boise State', 17, 6),\n (1980, 'Don Fambrough', 'Kansas', 17, 6),\n (2020, 'Mario Cristobal', 'Oregon', 17, 6),\n (2020, 'Mark Stoops', 'Kentucky', 17, 6),\n (2001, 'Mike Bellotti', 'Oregon', 17, 6),\n (2021, 'P.J. Fleck', 'Minnesota', 17, 6),\n (2020, 'Pat Narduzzi', 'Pittsburgh', 17, 6),\n (2017, 'Steve Addazio', 'Boston College', 17, 6),\n (2003, 'Tommy Tuberville', 'Auburn', 17, 6),\n (1984, 'Bobby Collins', 'SMU', 16, 6),\n (1971, 'Darrell Royal', 'Texas', 16, 6),\n (1980, 'Dick Crum', 'North Carolina', 16, 6),\n (1992, 'Dick Sheridan', 'NC State', 16, 6),\n (1979, 'Don James', 'Washington', 16, 6),\n (1999, 'Gary Barnett', 'Colorado', 16, 6),\n (2009, 'Greg Schiano', 'Rutgers', 16, 6),\n (2016, 'James Franklin', 'Penn State', 16, 6),\n (2020, 'Karl Dorrell', 'Colorado', 16, 6),\n (2007, 'Mike Riley', 'Oregon State', 16, 6),\n (2010, 'Mike Stoops', 'Arizona', 16, 6),\n (2014, 'Paul Johnson', 'Georgia Tech', 16, 6),\n (1998, 'Paul Pasqualoni', 'Syracuse', 16, 6),\n (2006, 'Ralph Friedgen', 'Maryland', 16, 6),\n (1971, 'Robert Dobbs', 'UTEP', 16, 6),\n (1981, 'Terry Donahue', 'UCLA', 16, 6),\n (2004, 'Al Groh', 'Virginia', 15, 6),\n (1996, 'Barry Alvarez', 'Wisconsin', 15, 6),\n (2013, 'Brady Hoke', 'Michigan', 15, 6),\n (1979, 'Claude Gilbert', 'San Diego State', 15, 6),\n (1975, 'Dan Devine', 'Notre Dame', 15, 6),\n (2004, 'David Cutcliffe', 'Ole Miss', 15, 6),\n (1971, 'Duffy Daugherty', 'Michigan State', 15, 6),\n (1989, 'George Perles', 'Michigan State', 15, 6),\n (1986, 'Howard Schnellenberger', 'Louisville', 15, 6),\n (1971, 'John Ralston', 'Stanford', 15, 6),\n (2015, 'Kevin Sumlin', 'Texas A&M', 15, 6),\n (2010, 'Randy Edsall', 'Connecticut', 15, 6),\n (2014, 'Steve Sarkisian', 'USC', 15, 6),\n (2004, 'Walt Harris', 'Pittsburgh', 15, 6),\n (1971, 'Woody Hayes', 'Ohio State', 15, 6),\n (1991, 'Bill McCartney', 'Colorado', 14, 6),\n (1971, 'Bob Devaney', 'Nebraska', 14, 6),\n (2004, 'Dirk Koetter', 'Arizona State', 14, 6),\n (2015, 'Gary Andersen', 'Oregon State', 14, 6),\n (2005, 'Gary Patterson', 'TCU', 14, 6),\n (2005, \"George O'Leary\", 'UCF', 14, 6),\n (1986, 'Jack Bicknell', 'Boston College', 14, 6),\n (1976, 'Jerry Claiborne', 'Maryland', 14, 6),\n (2008, 'Jim Grobe', 'Wake Forest', 14, 6),\n (2004, 'John Smith', 'Michigan State', 14, 6),\n (2019, 'Justin Fuente', 'Virginia Tech', 14, 6),\n (1980, 'Lou Holtz', 'Arkansas', 14, 6),\n (1999, \"Mike O'Cain\", 'NC State', 14, 6),\n (2000, 'Ron McBride', 'Utah', 14, 6),\n (2020, 'Sonny Dykes', 'SMU', 14, 6),\n (2015, 'Terry Bowden', 'Akron', 14, 6),\n (2002, \"Tom O'Brien\", 'Boston College', 14, 6),\n (2005, 'Tommy Bowden', 'Clemson', 14, 6),\n (1974, 'Vince Gibson', 'Kansas State', 14, 6),\n (1990, 'Bruce Snyder', 'California', 13, 6),\n (1982, 'Charley Pell', 'Florida', 13, 6),\n (1984, 'Doug Scovil', 'San Diego State', 13, 6),\n (1982, 'F. Dry', 'TCU', 13, 6),\n (1977, 'Fran Curci', 'Kentucky', 13, 6),\n (1971, 'Frank Kush', 'Arizona State', 13, 6),\n (1990, 'George Welsh', 'Virginia', 13, 6),\n (2002, 'Gerry DiNardo', 'Indiana', 13, 6),\n (2019, 'Hugh Freeze', 'Liberty', 13, 6),\n (1984, 'Jack Elway', 'Stanford', 13, 6),\n (2021, 'Jeff Brohm', 'Purdue', 13, 6),\n (1972, 'Jim Owens', 'Washington', 13, 6),\n (1985, 'Jimmy Johnson', 'Miami', 13, 6),\n (1999, 'Joe Tiller', 'Purdue', 13, 6),\n (1979, 'LaVell Edwards', 'BYU', 13, 6),\n (2021, 'Mike Norvell', 'Florida State', 13, 6),\n (2002, 'Rick Minter', 'Cincinnati', 13, 6),\n (2003, 'Sonny Lubick', 'Colorado State', 13, 6),\n (1973, 'Bear Bryant', 'Alabama', 12, 6),\n (1988, 'Bill Curry', 'Alabama', 12, 6),\n (2003, 'Bob Pruett', 'Marshall', 12, 6),\n (1983, 'Bob Weber', 'Louisville', 12, 6),\n (2011, 'Chris Ault', 'Nevada', 12, 6),\n (1977, 'Darryl Rogers', 'Michigan State', 12, 6),\n (1971, 'Doug Dickey', 'Florida', 12, 6),\n (1971, 'Eddie Crowder', 'Colorado', 12, 6),\n (2010, 'Mark Dantonio', 'Michigan State', 12, 6),\n (2011, 'Mike Gundy', 'Oklahoma State', 12, 6),\n (2017, 'Pat Fitzgerald', 'Northwestern', 12, 6),\n (1974, 'Ralph Jordan', 'Auburn', 12, 6),\n (2008, 'Rich Rodriguez', 'Michigan', 12, 6),\n (2002, 'Ron Turner', 'Illinois', 12, 6),\n (2016, 'Todd Graham', 'Arizona State', 12, 6),\n (1991, 'Dennis Green', 'Stanford', 11, 6),\n (1986, 'Dick Tomey', \"Hawai'i\", 11, 6),\n (1997, 'Glen Mason', 'Minnesota', 11, 6),\n (2008, 'Jim Leavitt', 'South Florida', 11, 6),\n (1992, 'John Mackovic', 'Texas', 11, 6),\n (1976, 'Johnny Majors', 'Pittsburgh', 11, 6),\n (2004, 'June Jones', \"Hawai'i\", 11, 6),\n (1994, 'Pat Jones', 'Oklahoma State', 11, 6),\n (1985, 'Rey Dempsey', 'Memphis', 11, 6),\n (1979, 'Sarkis Arslanian', 'Colorado State', 11, 6),\n (2018, 'Willie Taggart', 'Florida State', 11, 6),\n (1973, 'Alex Agase', 'Purdue', 10, 6),\n (1992, 'Bill Lewis', 'Georgia Tech', 10, 6),\n (1997, 'Bill Snyder', 'Kansas State', 10, 6),\n (1988, 'Billy Brewer', 'Ole Miss', 10, 6),\n (2000, 'Bob Toledo', 'UCLA', 10, 6),\n (2009, 'Bobby Johnson', 'Vanderbilt', 10, 6),\n (2018, 'Bryan Harsin', 'Boise State', 10, 6),\n (1971, 'Charles McClendon', 'LSU', 10, 6),\n (1993, 'Chuck Stobart', 'Memphis', 10, 6),\n (1971, 'Dee Andros', 'Oregon State', 10, 6),\n (1979, 'Earle Bruce', 'Ohio State', 10, 6),\n (1971, 'Frank Broyles', 'Arkansas', 10, 6),\n (2005, 'Gary Pinkel', 'Missouri', 10, 6),\n (1991, 'Jim Wacker', 'TCU', 10, 6),\n (1985, 'Jim Walden', 'Washington State', 10, 6),\n (1988, 'Joe Morrison', 'South Carolina', 10, 6),\n (1973, 'Joseph Yukica', 'Boston College', 10, 6),\n (2020, 'Matt Wells', 'Texas Tech', 10, 6),\n (2005, 'Mike Leach', 'Texas Tech', 10, 6),\n (1980, 'Mike White', 'Illinois', 10, 6),\n (2003, 'Pat Hill', 'Fresno State', 10, 6),\n (2002, 'Randy Walker', 'Northwestern', 10, 6),\n (2010, 'Skip Holtz', 'South Florida', 10, 6),\n (1980, 'Steve Sloan', 'Ole Miss', 10, 6),\n (1971, 'Ben Schwartzwalder', 'Syracuse', 9, 6),\n (1978, 'Bob Tyler', 'Mississippi State', 9, 6),\n (1978, 'Bobby Bowden', 'Florida State', 9, 6),\n (1975, 'Cal Stoll', 'Minnesota', 9, 6),\n (2008, 'Dan Hawkins', 'Colorado', 9, 6),\n (2004, 'Dan McCarney', 'Iowa State', 9, 6),\n (1981, 'Dave McClain', 'Wisconsin', 9, 6),\n (1986, 'Dick MacPherson', 'Syracuse', 9, 6),\n (1972, 'Frank Lauterbur', 'Iowa', 9, 6),\n (1971, 'Gene Stallings', 'Texas A&M', 9, 6),\n (1980, 'Hayden Fry', 'Iowa', 9, 6),\n (1980, 'Jim Carlen', 'South Carolina', 9, 6),\n (1985, 'John Cooper', 'Arizona State', 9, 6),\n (2009, 'Larry Blakeney', 'Troy', 9, 6),\n (1983, 'Larry Smith', 'Arizona', 9, 6),\n (1991, 'Mack Brown', 'North Carolina', 9, 6),\n (2015, 'Mike London', 'Virginia', 9, 6),\n (1983, 'Pat Dye', 'Auburn', 9, 6),\n (1983, 'Rich Brooks', 'Oregon', 9, 6),\n (2006, 'Rocky Long', 'New Mexico', 9, 6),\n (1996, 'Spike Dykes', 'Texas Tech', 9, 6),\n (2001, 'Steve Logan', 'East Carolina', 9, 6),\n (1973, 'Vince Dooley', 'Georgia', 9, 6),\n (2020, 'Willie Fritz', 'Tulane', 9, 6),\n (1976, 'Bill Dooley', 'North Carolina', 8, 6),\n (1994, 'Chuck Shelton', 'Pacific', 8, 6),\n (2021, 'Craig Bohl', 'Wyoming', 8, 6),\n (2019, 'Dave Clawson', 'Wake Forest', 8, 6),\n (2014, 'David Bailiff', 'Rice', 8, 6),\n (1999, 'David Rader', 'Tulsa', 8, 6),\n (1988, 'Dennis Stolz', 'San Diego State', 8, 6),\n (2020, 'Derek Mason', 'Vanderbilt', 8, 6),\n (1972, 'John Pont', 'Indiana', 8, 6),\n (1975, 'Lee Corso', 'Indiana', 8, 6),\n (2001, 'Watson Brown', 'UAB', 8, 6),\n (2009, 'Art Briles', 'Baylor', 7, 6),\n (2012, 'Bronco Mendenhall', 'BYU', 7, 6),\n (2005, 'Chris Scelfo', 'Tulane', 7, 6),\n (2019, 'Doc Holliday', 'Marshall', 7, 6),\n (1981, 'Don Nehlen', 'West Virginia', 7, 6),\n (1982, 'Jim Sweeney', 'Fresno State', 7, 6),\n (1998, 'Nelson Stokley', 'Louisiana', 7, 6),\n (2021, 'Tom Allen', 'Indiana', 7, 6),\n (2019, 'Doug Martin', 'New Mexico State', 6, 6),\n (1985, 'George MacIntyre', 'Vanderbilt', 6, 6),\n (2017, 'Rick Stockstill', 'Middle Tennessee', 6, 6),\n (2010, 'Steve Roberts', 'Arkansas State', 6, 6)]\n\n\n\ncur.description\n\n(('index', None, None, None, None, None, None),\n ('school', None, None, None, None, None, None),\n ('year', None, None, None, None, None, None),\n ('games', None, None, None, None, None, None),\n ('wins', None, None, None, None, None, None),\n ('losses', None, None, None, None, None, None),\n ('ties', None, None, None, None, None, None),\n ('preseason_rank', None, None, None, None, None, None),\n ('postseason_rank', None, None, None, None, None, None),\n ('srs', None, None, None, None, None, None),\n ('sp_overall', None, None, None, None, None, None),\n ('sp_offense', None, None, None, None, None, None),\n ('sp_defense', None, None, None, None, None, None),\n ('first_name', None, None, None, None, None, None),\n ('last_name', None, None, None, None, None, None),\n ('hire_date', None, None, None, None, None, None))\n\n\n\nrows = cur\n\n\nfor c in recruiting_players.columns:\n    print(c)\n\nid\nathlete_id\nrecruit_type\nyear\nranking\nname\nschool\ncommitted_to\nposition\nheight\nweight\nstars\nrating\ncity\nstate_province\ncountry\nhometown_info.latitude\nhometown_info.longitude\nhometown_info.county_fips\n\n\n\nrecruiting_players[recruiting_players.name.str.contains('Jamie Newman')]\n\n\n\n\n\n  \n    \n      \n      id\n      athlete_id\n      recruit_type\n      year\n      ranking\n      name\n      school\n      committed_to\n      position\n      height\n      weight\n      stars\n      rating\n      city\n      state_province\n      country\n      hometown_info.latitude\n      hometown_info.longitude\n      hometown_info.county_fips\n    \n  \n  \n    \n      668\n      35828\n      4037213.0\n      HighSchool\n      2016\n      647.0\n      Jamie Newman\n      Graham\n      Wake Forest\n      DUAL\n      75.0\n      219.0\n      3\n      0.8585\n      Graham\n      NC\n      USA\n      36.069026\n      -79.400576\n      None\n    \n  \n\n\n\n\n\nrecruiting_players[(recruiting_players.year == 2017) & (recruiting_players.recruit_type == 'HighSchool')].shape\n\n(4359, 19)\n\n\n\nrecruiting_players[(recruiting_players.year == 2017) & (recruiting_players.recruit_type == 'HighSchool') & (recruiting_players.rating > 0.7832)].shape\n\n(2627, 19)\n\n\n\ndraft_columns = ['athlete_id', 'college_team', 'college_conference', 'nfl_team', 'year', 'overall', 'round', 'pick', 'name']\nrecruiting_columns = ['athlete_id', 'recruit_type', 'year', 'ranking', 'name', 'committed_to', 'stars']\ndrafted_players.rename({\"college_athlete_id\": \"athlete_id\"}, axis = 1, inplace=True)\ncombined = pd.merge(drafted_players[~drafted_players.athlete_id.isna()][draft_columns], recruiting_players[~recruiting_players.athlete_id.isna()][recruiting_columns], how='left', on='athlete_id')\n\n\ncombined[(combined.year_x >= 2017) & (combined.college_conference.str.lower() == 'sec')].college_team.value_counts().reset_index().head(25)#['index'].tolist()[:25]\n\n\n\n\n\n  \n    \n      \n      index\n      college_team\n    \n  \n  \n    \n      0\n      Alabama\n      58\n    \n    \n      1\n      LSU\n      51\n    \n    \n      2\n      Georgia\n      46\n    \n    \n      3\n      Florida\n      37\n    \n    \n      4\n      Auburn\n      26\n    \n    \n      5\n      Texas A&M\n      25\n    \n    \n      6\n      Ole Miss\n      22\n    \n    \n      7\n      Mississippi State\n      20\n    \n    \n      8\n      Tennessee\n      18\n    \n    \n      9\n      Kentucky\n      17\n    \n    \n      10\n      South Carolina\n      15\n    \n    \n      11\n      Arkansas\n      14\n    \n    \n      12\n      Missouri\n      13\n    \n    \n      13\n      Vanderbilt\n      7\n    \n  \n\n\n\n\n\nUp and to the right!\n\ncombined[(combined.year_x >= 2017) & (combined.college_team == \"Georgia\")].groupby(['stars', 'year_x']).size().plot.bar()\n\n<AxesSubplot:xlabel='stars,year_x'>\n\n\n\n\n\n\ndrafted_players[(drafted_players.year == 2017) & (drafted_players.college_team == \"Georgia\")].name\n\n171    Isaiah McKenzie\nName: name, dtype: object\n\n\n\ncombined[combined.year_x >= 2017].groupby(['college_team', 'stars']).size()\n\ncollege_team      stars\nAkron             3.0       1\nAlabama           2.0       1\n                  3.0       7\n                  4.0      30\n                  5.0      20\n                           ..\nWisconsin         3.0      16\n                  4.0       2\nWyoming           2.0       4\n                  3.0       1\nYoungstown State  3.0       1\nLength: 288, dtype: int64\n\n\n\ncombined[(combined.year_x >= 2017) & (combined.college_team.isin(['Georgia', 'Alabama']))].groupby(['college_team', 'stars']).round.mean()\n\ncollege_team  stars\nAlabama       2.0      6.000000\n              3.0      3.571429\n              4.0      2.866667\n              5.0      1.800000\nGeorgia       3.0      3.375000\n              4.0      3.450000\n              5.0      3.294118\nName: round, dtype: float64\n\n\n\ncombined.shape\n\n(4923, 15)\n\n\n\ndrafted_players.columns\n\nIndex(['athlete_id', 'nfl_athlete_id', 'college_id', 'college_team',\n       'college_conference', 'nfl_team', 'year', 'overall', 'round', 'pick',\n       'name', 'position', 'height', 'weight', 'pre_draft_ranking',\n       'pre_draft_position_ranking', 'pre_draft_grade', 'hometown_info.city',\n       'hometown_info.state', 'hometown_info.country',\n       'hometown_info.latitude', 'hometown_info.longitude',\n       'hometown_info.country_fips'],\n      dtype='object')\n\n\n\nrecruiting_players.columns\n\n\ndrafted_players.shape\n\n(12050, 23)\n\n\n\nrecruiting_players[recruiting_players.name == \"Eric Stokes\"]\n\n\n\n\n\n  \n    \n      \n      id\n      athlete_id\n      recruit_type\n      year\n      ranking\n      name\n      school\n      committed_to\n      position\n      height\n      weight\n      stars\n      rating\n      city\n      state_province\n      country\n      hometown_info.latitude\n      hometown_info.longitude\n      hometown_info.county_fips\n    \n  \n  \n    \n      695\n      39292\n      4259561.0\n      HighSchool\n      2017\n      665.0\n      Eric Stokes\n      Eastside\n      Georgia\n      CB\n      72.0\n      170.0\n      3\n      0.8578\n      Covington\n      GA\n      USA\n      33.596781\n      -83.860183\n      None\n    \n  \n\n\n\n\n\ndrafted_players[(drafted_players.year==2021) & (drafted_players.college_team == \"Georgia\")][['college_athlete_id', 'college_team', 'college_conference', 'nfl_team', 'year', 'overall', 'round', 'pick', 'name']]\n\n\n\n\n\n  \n    \n      \n      college_athlete_id\n      college_team\n      college_conference\n      nfl_team\n      year\n      overall\n      round\n      pick\n      name\n    \n  \n  \n    \n      28\n      4259561.0\n      Georgia\n      SEC\n      Green Bay\n      2021\n      29.0\n      1.0\n      29.0\n      Eric Stokes\n    \n    \n      32\n      4379397.0\n      Georgia\n      SEC\n      Jacksonville\n      2021\n      33.0\n      2.0\n      1.0\n      Tyson Campbell\n    \n    \n      49\n      4379409.0\n      Georgia\n      SEC\n      New York\n      2021\n      50.0\n      2.0\n      18.0\n      Azeez Ojulari\n    \n    \n      91\n      4240692.0\n      Georgia\n      SEC\n      Tennessee\n      2021\n      92.0\n      3.0\n      29.0\n      Monty Rice\n    \n    \n      93\n      4035002.0\n      Georgia\n      SEC\n      Baltimore\n      2021\n      94.0\n      3.0\n      31.0\n      Ben Cleveland\n    \n    \n      96\n      4240023.0\n      Georgia\n      SEC\n      Los Angeles\n      2021\n      97.0\n      3.0\n      34.0\n      Tre' McKitty\n    \n    \n      168\n      4240686.0\n      Georgia\n      SEC\n      Cleveland\n      2021\n      169.0\n      5.0\n      25.0\n      Richard LeCounte\n    \n    \n      189\n      4361787.0\n      Georgia\n      SEC\n      Cincinnati\n      2021\n      190.0\n      6.0\n      6.0\n      Trey Hill\n    \n    \n      240\n      4259570.0\n      Georgia\n      SEC\n      Los Angeles\n      2021\n      241.0\n      7.0\n      13.0\n      Mark Webb\n    \n  \n\n\n\n\n\ndrafted_players = load_to_df('get_draft_picks')\n\n\nfor c in drafted_players.columns:\n    print(c)\n\ncollege_athlete_id\nnfl_athlete_id\ncollege_id\ncollege_team\ncollege_conference\nnfl_team\nyear\noverall\nround\npick\nname\nposition\nheight\nweight\npre_draft_ranking\npre_draft_position_ranking\npre_draft_grade\nhometown_info.city\nhometown_info.state\nhometown_info.country\nhometown_info.latitude\nhometown_info.longitude\nhometown_info.country_fips\n\n\n\nrecruiting_players.shape\n\n(64746, 19)\n\n\n\ndir_list.shape\n\n(2737, 19)\n\n\n\npd.concat([dir_list, dir_list]).shape\n\n(5474, 19)\n\n\n\ndef only_dict(d):\n    '''\n    Convert json string representation of dictionary to a python dict\n    '''\n    return ast.literal_eval(d)\n\n\ntest = pd.DataFrame(dir_list[:3])\n\n\ntest.dtypes\n\nid                  int64\nathlete_id        float64\nrecruit_type       object\nyear                int64\nranking             int64\nname               object\nschool             object\ncommitted_to       object\nposition           object\nheight            float64\nweight              int64\nstars               int64\nrating            float64\ncity               object\nstate_province     object\ncountry            object\nhometown_info      object\ndtype: object\n\n\n\n\njson_normalize(pd.DataFrame(dir_list[:3])['hometown_info'].tolist()).add_prefix('hometown_info.')\n\n/Users/bleathers/.pyenv/versions/3.7.9/envs/scratch/lib/python3.7/site-packages/ipykernel_launcher.py:5: FutureWarning: pandas.io.json.json_normalize is deprecated, use pandas.json_normalize instead\n  \"\"\"\n\n\n\n\n\n\n  \n    \n      \n      hometown_info.latitude\n      hometown_info.longitude\n      hometown_info.county_fips\n    \n  \n  \n    \n      0\n      33.875295\n      -117.566445\n      None\n    \n    \n      1\n      27.498928\n      -82.574819\n      None\n    \n    \n      2\n      47.608844\n      -122.042307\n      None\n    \n  \n\n\n\n\n\ntype(pd.DataFrame(dir_list[:3]).loc[0, 'hometown_info'])\n\ndict\n\n\n\ndir_list[0]\n\n'get_recruiting_players_2021.json'\n\n\n\n[x for x in api_response if x.destination == \"Georgia\"]\n\n[{'destination': 'Georgia',\n  'eligibility': 'Immediate',\n  'first_name': 'Joseph',\n  'last_name': 'Daniels Jr.',\n  'origin': 'Indiana',\n  'position': 'CB',\n  'rating': None,\n  'season': 2022,\n  'stars': 2,\n  'transfer_date': '2021-11-30T14:05:00.000Z'}]\n\n\n\nlen()\n\n3668\n\n\n\ntest = json.dumps([x.to_dict() for x in api_response])\n\n\n# test\n\n\n\n\nNameError: name 'doc' is not defined"
  },
  {
    "objectID": "2023_Draft_Kirby_Death Star_Fully_Operational-SCRATCH.html",
    "href": "2023_Draft_Kirby_Death Star_Fully_Operational-SCRATCH.html",
    "title": "",
    "section": "",
    "text": "Kirby’s Draft Production"
  },
  {
    "objectID": "2023_Draft_Kirby_Death Star_Fully_Operational-SCRATCH.html#all-time-includes-the-future-and-while-saban-might-be-the-greatest-in-history-when-its-all-said-and-done-kirby-will-be-the-g.o.a.t.",
    "href": "2023_Draft_Kirby_Death Star_Fully_Operational-SCRATCH.html#all-time-includes-the-future-and-while-saban-might-be-the-greatest-in-history-when-its-all-said-and-done-kirby-will-be-the-g.o.a.t.",
    "title": "",
    "section": "“All Time” includes the future, and while Saban might be the greatest in history, when it’s all said and done, Kirby will be the G.O.A.T.",
    "text": "“All Time” includes the future, and while Saban might be the greatest in history, when it’s all said and done, Kirby will be the G.O.A.T."
  },
  {
    "objectID": "2023_pre_draft_review.html",
    "href": "2023_pre_draft_review.html",
    "title": "",
    "section": "",
    "text": "Nick Saban won’t be the G.O.A.T.\n\n\nAn NFL Draft Perspective\n\n\nBy: Ben Leathers\n\n\n2023-04-17\n\n\nClickbait headline aside, Nick Saban is unquestionably the greatest coach in history. However, the interesting thing about “all time” is that it includes the future. Kirby Smart is only 7 seasons into his career as a head coach, and he’s been quite prolific when it comes to putting players into the draft. With the 2023 Draft coming up next week, I wanted to see how the start of Kirby’s head coaching career has looked so far and how he compares to other coaches at the beginning their careers, including Nick Saban. Finally, we’ll look at how his trajectory projects into the future. But first, let’s start with Kirby.\n\n\nHow well has UGA put players into the draft while Kirby Smart has been the head coach?\n\n\n\n\n\n\nWow… could that “up and to the right” trajectory suggest that Kirby’s good at player development?\n\n\nYou might be thinking to yourself… “No, it just suggests he’s recruiting better players” which is a reasonable thing to think. Mark Richt is no question a DGD, and he elevated the program during his tenure. That being said, Kirby inherited a roster whose previous 3 recruiting classes had an average ranking of ~9th in the country, whereas Kirby has averaged rankings of ~3rd as head coach of UGA. So you would be justified to argue that this upward trajectory just points to better recruiting. But is there more to the story?\n\n\n\n\n\n\nIt’s not just better players. Even the 3 stars are more likely to get drafted the longer they play under Kirby.\n\n\nHow do UGA’s Draft results during Kirby’s first 6 years compare to other coach’s first 6 years?\n\n\n\n\n\n\nSeeing Jimbo Fisher at #5 was surprising to begin with, but then I remembered he’s got a reputation for recruiting and he’s developing a reputation for losing recruits now that the transfer portal is a factor. Mark Richt at #6 is less surprising, he was a great coach who did put a lot of talent into the NFL.\n\n\nSo how did Larry Coker and Jim Tressel out perform Kirby in the first 6 years?\n\n\n\n\n\n\nOh, they stepped into programs with loaded rosters that put 8 and 11 players into the NFL in year 1. Kirby didn’t inherit a completely bare roster, but it was certainly more modest.\n\n\nHow many UGA players will need to be drafted in order for Kirby to jump into first in year 7?\n\n\n\n\n\n\nWhat Happened to Larry Coker?\n\n\nHe got fired from Miami after going 6-6 and didn’t coach again until 2012 when he was hired by UTSA.\n\n\nLet’s check on some coaches that are noticibly absent from the top ten.\n\n\n\n\n\n\nIn fairness to Saban he didn’t start his heach coaching careers at a blue blood football school, so lets compare the results from the start of each school’s tenure.\n\n\n\n\n\n\n\n\n\nKirby’s start at UGA is out pacing any of Saban’s starts. However, we don’t call him the greatest in history for no reason, so let’s see how things compare when we look at ANY 6 year span…\n\n\n\nAnd there it is. Saban has spent the last 11 years churning out NFL talent at an unprecedented level, and thus he currently occupies the top 6 spots in that ranking.\n\n\nSo while Kirby has certainly gotten the flywheel of player development up to speed quicker than anyone else, the question is, can he sustain that? According to his post G-Day press conference last weekend, UGA is “built to sustain… That’s my motto.”, and by all accounts that looks to be the case.\n\n\nLet’s take a look at Saban’s entire career to get an idea of what it looks like to sustain, and where the bar has been set.\n\n\n\n\n\n\nWow. That puts “sustain” into perspective. Saban has over 25 years as a head coach, and he’s sustained greatness over that span. Kirby has gotten off to an elite start. Only time will tell if he’ll be able to sustain long enough to cement himself as the G.O.A.T.\n\n\n\nTakeaways:\n\n\nKirby’s program develops players.\n\n\nKirby’s Death Star might not have even been fully operational yet… 🤯\n\n\n“All Time” includes the future, and while Saban might be the greatest in history, Kirby is on the path to take over and when it’s all said and done…\n\n\nSaban will not be the G.O.A.T., Kirby will.\n\n\nThis analysis was based on an open source dataset, cfbd, and while I’m confident in my work, I am also confident I’m human, so if you find a mistake, please let me know."
  },
  {
    "objectID": "2023_pre_draft_review_article.html",
    "href": "2023_pre_draft_review_article.html",
    "title": "nfl_draft_review",
    "section": "",
    "text": "Nick Saban won’t be the G.O.A.T.\n\n\nPart 1: The NFL Draft\n\n\nBy: Ben Leathers\n\n\n2023-04-17\n\n\nClickbait headline aside, Nick Saban is unquestionably the greatest coach in history. However, the interesting thing about “all time” is that it includes the future. While many think Saban will be the G.O.A.T., Kirby Smart, who’s coming off of back to back national championships, is seven years down a war path aimed at claiming the G.O.A.T. title.\n\n\nThere are many apects of a coach’s career that will be referenced when fans engage in the G.O.A.T. debate, and I look forward to exploring them all, but with the 2023 NFL Draft happening next week and Kirby Smart coming off a record setting year with fifteen players drafted in 2022, I wanted to wet the series whistle with a focus on the NFL Draft production for their respective careers. Let’s begin with Kirby, whose head coaching career began in 2016.\n\n\nHow well has UGA put players into the draft while Kirby Smart has been the head coach?\n\n\n\n\n\n\nWow… could that “up and to the right” trajectory suggest that Kirby’s good at player development?\n\n\nYou might be thinking to yourself… “No, it just suggests he’s recruiting better players” which is a reasonable thing to think. Mark Richt is no question a DGD (“Damn Good Dawg”, for any non-Georgia fans), and he elevated the program during his tenure. That being said, Kirby inherited a roster whose previous three recruiting classes had an average ranking of ~9th in the country, whereas Kirby has averaged rankings of ~3rd as head coach of UGA. So you would be justified to argue that this upward trajectory just points to better recruiting. But is there more to the story?\n\n\n\n\n\n\nIt’s not just better players. Even recruits rated 3-stars or lower are more likely to get drafted the longer they play under Kirby.\n\n\nHow do UGA’s Draft results during Kirby’s first 6 years compare to other coach’s first 6 years?\n\n\n\n\n\n\nSeeing Jimbo Fisher at #5 was surprising to begin with, but then I remembered he had a reputation for recruiting even before NIL deals were on the table. Thankfully, with the advent of the transfer portal he’s also developing a reputation for losing big name recruits (I’m looking forward to watching Deyon “Smoke” Bouie don the red and black this fall.). You could argue that Jimbo’s ranking on that list undermines the validity of using NFL draft production as a proxy for coaching ability, but that certainly won’t stop fans from including draft results in their G.O.A.T. debates, so we’ll press on.\n\n\nAs a Georgia fan, I want to give a tip of the cap to Mark Richt at #6. He was a great coach who put a lot of talent into the NFL.\n\n\nSo how did Larry Coker and Jim Tressel out perform Kirby in the first 6 years?\n\n\n\n\n\n\nOh, they stepped into programs with loaded rosters that put 8 and 11 players into the NFL in year 1. Kirby didn’t inherit a desolate roster, but it was certainly more modest.\n\n\nHow many UGA players will need to be drafted in order for Kirby to jump into first in year 7?\n\n\n\n\n\n\nWith 13 UGA players declared for this year’s draft and pundits projecting 6 UGA players to go in the first 3 rounds alone, Kirby will almost certainly be sitting atop the year-7 draft production rankings by the conclusion of the 7th round.\n\n\n(Sidebar) What Happened to Larry Coker?\n\n\nWasn’t he tied for first with 47 players drafted in his first 6 years as a head coach? Turns out he got fired from Miami after going 6-6 in 2006 and he didn’t coach again until 2012 when he was hired by UTSA.\n\n\nLet’s check on some coaches that are noticibly absent from the top ten.\n\n\n\n\n\n\nIn fairness to Saban he didn’t start his head coaching career at a blue blood football school, so lets compare the results from his start at each of the school’s he’s coached at.\n\n\n\n\n\n\n\n\n\nKirby’s start at UGA is out pacing any of Saban’s starts. However, we don’t call him the greatest in history for no reason, so let’s see how things compare when we look at ANY 6 year span…\n\n\n\nAnd there it is. Saban has spent the last 11 years churning out NFL talent at an unprecedented level, and thus he currently occupies the top 6 spots in that ranking.\n\n\nSo while Kirby has certainly gotten the flywheel of talent acquisition and player development up to speed quicker than anyone else, the path to G.O.A.T. status is veeeery long. The natural next question is: can he sustain? According to his post G-Day press conference last weekend, UGA is “built to sustain… That’s my motto.”, and by all accounts that looks to be the case.\n\n\nTo close, let’s take a look at Saban’s career in it’s entirety to see just how long that war path really is.\n\n\n\n\n\n\nWow. That puts “sustain” into perspective. Saban has over 25 years as a head coach, and he’s sustained greatness over that span. Kirby has gotten off to an elite start. Only time will tell if he’ll be able to sustain long enough to cement himself as the G.O.A.T. I’d bet on him.\n\n\n\nTakeaways:\n\n\nKirby’s program develops players.\n\n\nKirby’s Death Star might not have even been fully operational yet… 🤯\n\n\n“All Time” includes the future, and while Saban might be the greatest in history, Kirby is on the path to take over and when it’s all said and done…\n\n\nSaban will not be the G.O.A.T., Kirby will.\n\n\nIf you are interested in more content like this, follow me on twitter @LeathersHead.\n\n\nThis analysis was based on an open source dataset, cfbd, and while I’m confident in my work, I am also confident I’m human, so if you find a mistake, please let me know."
  }
]